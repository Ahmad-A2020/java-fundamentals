/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Library;


import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class RestaurantTest {
/*
test of the Restaurant class
*/
@Test
    public void tostringTest() {
        Restaurant capital= new Restaurant("Capital Restaurant",2,"dollar");
        assertEquals("Restaurant Details{Restaurant Name='Capital Restaurant', Number of stars=2, Price Category='dollar'}", capital.toString(),"ensure that its toString is working properly");

    }
    @Test
    public void testResturant(){
        Restaurant capital= new Restaurant("Capital Restaurant",2,"dollar");
        assertEquals("Capital Restaurant", capital.getName(), "Implement a Restaurant constructor. ");
    }
    /*
test of the Review  class
*/
    @Test
    public void reviewtostringTest() {
        Review review = new Review("the restaurant is good","Ahmad Ali",3);
        assertEquals("Review on the Restaurant Service: {comment='the restaurant is good', By:'Ahmad Ali', Evaluation Stars Num=3}", review.toString(),"ensure that its toString is working properly");

    }
    // Test that your constructor is working reasonably.
    @Test
    public void testreview(){
        Review review = new Review("the restaurant is good","Ahmad Ali",3);
        assertEquals("Ahmad Ali", review.getAuthor(), "Test that your constructor is working reasonably.\n");
    }
    @Test
    public void addReviewTest(){
        Restaurant capital= new Restaurant("Capital Restaurant",2,"dollar");
        capital.addReview("the restaurant is good","Ahmad Ali",3);
        assertEquals("Review on the Restaurant Service: {comment='the restaurant is good', By:'Ahmad Ali', Evaluation Stars Num=3}", capital.getReview());
    }
    @Test
    public void updateStarTest(){
        Restaurant capital= new Restaurant("Capital Restaurant",2,"dollar");
        capital.addReview("the restaurant is good","Ahmad Ali",3);
        assertEquals(3, capital.getStarsNum(),"check updating the restaurant evaluation ");
    }
    /*  Test for the Shop & Theater*/
    @Test
    public void ShopConstructorTest(){
        Shop shop = new Shop("Defacto","kleidung shop",2);
        assertEquals("Defacto", shop.getName());
    }
    @Test
    public void ShopTostringMethodTest(){
        Shop shop = new Shop("Defacto","kleidung shop",2);
        assertEquals("Shop Details{Shpe Name:'Defacto', About:'kleidung shop',Number of Dollar signs:2}",shop.toString());
    }
    @Test
    public void ShopReviewTest(){
        Shop shop = new Shop("Defacto","kleidung shop",2);
        shop.AddReview("shop is good but it need more service staff","Ahmad Ali",4);
        assertEquals("Review on the Restaurant Service: {comment='shop is good but it need more service staff', By:'Ahmad Ali', Evaluation Stars Num=4}",shop.getReview());

    }

     /* test of theater class*/

    @ Test
    public void TheaterTestTostring(){
        ArrayList<String> movies = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator", "Joker"));

        Theater theater = new Theater("Irbid Cenima",movies);
        assertEquals("Theater{name of the Theater is :'Irbid Cenima', movies showen: [Lord of the Ring, Gladiator, Joker]}",theater.toString());

    }
    @ Test
    public void addMovieTest(){
        ArrayList<String> movies = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator", "Joker"));
        ArrayList<String> result = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator", "Joker","Matrix"));


        Theater theater = new Theater("Irbid Cenima",movies);
        theater.addMovie("Matrix");
        assertEquals(result,theater.getMovies());
    }
    @ Test
    public void removeMovieTest(){
        ArrayList<String> movies = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator", "Joker"));
        ArrayList<String> result = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator"));


        Theater theater = new Theater("Irbid Cenima",movies);
        theater.removeMovie("Joker");
        assertEquals(result,theater.getMovies());
    }
    @ Test
    public void AddReviewTest(){
        ArrayList<String> movies = new ArrayList<>( Arrays.asList("Lord of the Ring", "Gladiator", "Joker"));
        Theater theater = new Theater("Irbid Cenima",movies);
        theater.AddReview("its is a beatiful movie","Ahmad Ali",4,"Gladiator");

        assertEquals("Review:{comment:'its is a beatiful movie', By:'Ahmad Ali', Evaluation Stars Num=4}",theater.getReview());

    }



}

